{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { Fragment } from 'react';\nimport PropTypes from \"prop-types\";\nimport classNames from 'classnames';\nimport { LEFT_ALIGNMENT, RIGHT_ALIGNMENT, CENTER_ALIGNMENT } from '../../services';\nimport { resolveWidthAsStyle } from './utils';\nexport var EuiTableRowCell = function EuiTableRowCell(_ref) {\n  var _ref$align = _ref.align,\n      align = _ref$align === void 0 ? LEFT_ALIGNMENT : _ref$align,\n      children = _ref.children,\n      className = _ref.className,\n      truncateText = _ref.truncateText,\n      showOnHover = _ref.showOnHover,\n      _ref$textOnly = _ref.textOnly,\n      textOnly = _ref$textOnly === void 0 ? true : _ref$textOnly,\n      hasActions = _ref.hasActions,\n      isExpander = _ref.isExpander,\n      _ref$mobileOptions = _ref.mobileOptions,\n      mobileOptions = _ref$mobileOptions === void 0 ? {\n    show: true\n  } : _ref$mobileOptions,\n      header = _ref.header,\n      hideForMobile = _ref.hideForMobile,\n      isMobileHeader = _ref.isMobileHeader,\n      isMobileFullWidth = _ref.isMobileFullWidth,\n      style = _ref.style,\n      width = _ref.width,\n      rest = _objectWithoutProperties(_ref, [\"align\", \"children\", \"className\", \"truncateText\", \"showOnHover\", \"textOnly\", \"hasActions\", \"isExpander\", \"mobileOptions\", \"header\", \"hideForMobile\", \"isMobileHeader\", \"isMobileFullWidth\", \"style\", \"width\"]);\n\n  var cellClasses = classNames('euiTableRowCell', {\n    'euiTableRowCell--hasActions': hasActions,\n    'euiTableRowCell--isExpander': isExpander,\n    'euiTableRowCell--hideForDesktop': mobileOptions.only || isMobileHeader,\n    'euiTableRowCell--enlargeForMobile': mobileOptions.enlarge || isMobileHeader,\n    'euiTableRowCell--isMobileFullWidth': mobileOptions.fullWidth || isMobileFullWidth || isMobileHeader\n  });\n  var contentClasses = classNames('euiTableCellContent', className, {\n    'euiTableCellContent--alignRight': align === RIGHT_ALIGNMENT,\n    'euiTableCellContent--alignCenter': align === CENTER_ALIGNMENT,\n    'euiTableCellContent--showOnHover': showOnHover,\n    'euiTableCellContent--truncateText': truncateText,\n    // We're doing this rigamarole instead of creating `euiTableCellContent--textOnly` for BWC\n    // purposes for the time-being.\n    'euiTableCellContent--overflowingContent': textOnly !== true\n  });\n  var mobileContentClasses = classNames('euiTableCellContent', className, {\n    'euiTableCellContent--alignRight': mobileOptions.align === RIGHT_ALIGNMENT || align === RIGHT_ALIGNMENT,\n    'euiTableCellContent--alignCenter': mobileOptions.align === CENTER_ALIGNMENT || align === RIGHT_ALIGNMENT,\n    'euiTableCellContent--showOnHover': mobileOptions.showOnHover || showOnHover,\n    'euiTableCellContent--truncateText': mobileOptions.truncateText || truncateText,\n    // We're doing this rigamarole instead of creating `euiTableCellContent--textOnly` for BWC\n    // purposes for the time-being.\n    'euiTableCellContent--overflowingContent': mobileOptions.textOnly !== true || textOnly !== true\n  });\n  var childClasses = classNames({\n    euiTableCellContent__text: textOnly === true,\n    euiTableCellContent__hoverItem: showOnHover\n  });\n  var styleObj = resolveWidthAsStyle(style, width);\n\n  function modifyChildren(children) {\n    var modifiedChildren = children;\n\n    if (textOnly === true) {\n      modifiedChildren = React.createElement(\"span\", {\n        className: childClasses\n      }, children);\n    } else if (React.isValidElement(children)) {\n      modifiedChildren = React.Children.map(children, function (child) {\n        return React.cloneElement(child, {\n          className: classNames(child.props.className, childClasses)\n        });\n      });\n    }\n\n    return modifiedChildren;\n  }\n\n  var childrenNode = modifyChildren(children);\n  var hideForMobileClasses = 'euiTableRowCell--hideForMobile';\n  var showForMobileClasses = 'euiTableRowCell--hideForDesktop';\n  var cellRender;\n\n  if (mobileOptions.show === false || hideForMobile) {\n    cellRender = React.createElement(\"td\", _extends({\n      className: \"\".concat(cellClasses, \" \").concat(hideForMobileClasses),\n      style: styleObj\n    }, rest), React.createElement(\"div\", {\n      className: contentClasses\n    }, childrenNode));\n  } else {\n    cellRender = React.createElement(\"td\", _extends({\n      className: cellClasses,\n      style: styleObj\n    }, rest), (mobileOptions.header || header) && !isMobileHeader && React.createElement(\"div\", {\n      className: \"euiTableRowCell__mobileHeader \".concat(showForMobileClasses)\n    }, mobileOptions.header || header), mobileOptions.render ? React.createElement(Fragment, null, React.createElement(\"div\", {\n      className: \"\".concat(mobileContentClasses, \" \").concat(showForMobileClasses)\n    }, modifyChildren(mobileOptions.render)), React.createElement(\"div\", {\n      className: \"\".concat(contentClasses, \" \").concat(hideForMobileClasses)\n    }, childrenNode)) : React.createElement(\"div\", {\n      className: contentClasses\n    }, childrenNode));\n  }\n\n  return cellRender;\n};\nEuiTableRowCell.propTypes = {\n  className: PropTypes.string,\n  \"aria-label\": PropTypes.string,\n  \"data-test-subj\": PropTypes.string,\n  align: PropTypes.oneOf([\"left\", \"right\", \"center\"]),\n\n  /**\n     * Don't allow line breaks within cells\n     */\n  showOnHover: PropTypes.bool,\n\n  /**\n     * Setting `textOnly` to `false` will break words unnecessarily on FF and\n     * IE.  To combat this problem on FF, wrap contents with the css utility\n     * `.eui-textBreakWord`.\n     */\n  textOnly: PropTypes.bool,\n\n  /**\n     * _Should only be used for action cells_\n     */\n  truncateText: PropTypes.bool,\n  width: PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.number.isRequired]),\n\n  /**\n     * Indicates if the column is dedicated to icon-only actions (currently\n     * affects mobile only)\n     */\n  hasActions: PropTypes.bool,\n\n  /**\n     * _DEPRECATED: use `mobileOptions.header`_\n     * The column's header title for use in mobile view (will be added as a\n     * data-attr)\n     */\n  header: PropTypes.string,\n\n  /**\n     * _DEPRECATED: use `mobileOptions.show = false`_\n     * Indicates if the column should not show for mobile users (typically\n     * hidden because a custom mobile header utilizes the column's contents)\n     */\n  hideForMobile: PropTypes.bool,\n\n  /**\n     * Indicates if the column is dedicated as the expandable row toggle\n     */\n  isExpander: PropTypes.bool,\n\n  /**\n     * _DEPRECATED: use `mobileOptions.fullWidth`_\n     * Allocates 100% of the width of the container in mobile view\n     * (typically cells are contained to 50%)\n     */\n  isMobileFullWidth: PropTypes.bool,\n\n  /**\n     * _DEPRECATED: use `mobileOptions.only = true & mobileOptions.header = * false`_\n     * Indicates if the column was created to be the row's heading in mobile\n     * view.  It won't display column's header inline and it the column will\n     * be hidden at larger screens)\n     */\n  isMobileHeader: PropTypes.bool,\n\n  /**\n     * Mobile options for displaying differently at small screens\n     */\n  mobileOptions: PropTypes.shape({\n    /**\n       * If false, will not render the cell at all for mobile\n       */\n    show: PropTypes.bool,\n\n    /**\n       * Only show for mobile? If true, will not render the column at all for desktop\n       */\n    only: PropTypes.bool,\n\n    /**\n       * Custom render/children if different from desktop\n       */\n    render: PropTypes.node,\n\n    /**\n       * The column's header for use in mobile view (automatically passed down\n       * when using `EuiBasicTable`).\n       * Or pass `false` to not show a header at all.\n       */\n    header: PropTypes.oneOfType([PropTypes.node.isRequired, PropTypes.bool.isRequired]),\n\n    /**\n       * Increase text size compared to rest of cells\n       */\n    enlarge: PropTypes.bool,\n\n    /**\n       * Allocates 100% of the width of the container in mobile view\n       * (typically cells are contained to 50%)\n       */\n    fullWidth: PropTypes.bool,\n\n    /**\n       * Horizontal alignment of the text in the cell\n       */\n    align: PropTypes.oneOf([\"left\", \"right\", \"center\"]),\n\n    /**\n       * Don't allow line breaks within cells\n       */\n    showOnHover: PropTypes.bool,\n\n    /**\n       * Setting `textOnly` to `false` will break words unnecessarily on FF and\n       * IE.  To combat this problem on FF, wrap contents with the css utility\n       * `.eui-textBreakWord`.\n       */\n    textOnly: PropTypes.bool,\n\n    /**\n       * _Should only be used for action cells_\n       */\n    truncateText: PropTypes.bool,\n    width: PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.number.isRequired])\n  })\n};","map":{"version":3,"sources":["/Users/timothybowen/Documents/Development/social-one/node_modules/@elastic/eui/es/components/table/table_row_cell.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","keys","React","Fragment","PropTypes","classNames","LEFT_ALIGNMENT","RIGHT_ALIGNMENT","CENTER_ALIGNMENT","resolveWidthAsStyle","EuiTableRowCell","_ref","_ref$align","align","children","className","truncateText","showOnHover","_ref$textOnly","textOnly","hasActions","isExpander","_ref$mobileOptions","mobileOptions","show","header","hideForMobile","isMobileHeader","isMobileFullWidth","style","width","rest","cellClasses","only","enlarge","fullWidth","contentClasses","mobileContentClasses","childClasses","euiTableCellContent__text","euiTableCellContent__hoverItem","styleObj","modifyChildren","modifiedChildren","createElement","isValidElement","Children","map","child","cloneElement","props","childrenNode","hideForMobileClasses","showForMobileClasses","cellRender","concat","render","propTypes","string","oneOf","bool","oneOfType","isRequired","number","shape","node"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { Fragment } from 'react';\nimport PropTypes from \"prop-types\";\nimport classNames from 'classnames';\nimport { LEFT_ALIGNMENT, RIGHT_ALIGNMENT, CENTER_ALIGNMENT } from '../../services';\nimport { resolveWidthAsStyle } from './utils';\nexport var EuiTableRowCell = function EuiTableRowCell(_ref) {\n  var _ref$align = _ref.align,\n      align = _ref$align === void 0 ? LEFT_ALIGNMENT : _ref$align,\n      children = _ref.children,\n      className = _ref.className,\n      truncateText = _ref.truncateText,\n      showOnHover = _ref.showOnHover,\n      _ref$textOnly = _ref.textOnly,\n      textOnly = _ref$textOnly === void 0 ? true : _ref$textOnly,\n      hasActions = _ref.hasActions,\n      isExpander = _ref.isExpander,\n      _ref$mobileOptions = _ref.mobileOptions,\n      mobileOptions = _ref$mobileOptions === void 0 ? {\n    show: true\n  } : _ref$mobileOptions,\n      header = _ref.header,\n      hideForMobile = _ref.hideForMobile,\n      isMobileHeader = _ref.isMobileHeader,\n      isMobileFullWidth = _ref.isMobileFullWidth,\n      style = _ref.style,\n      width = _ref.width,\n      rest = _objectWithoutProperties(_ref, [\"align\", \"children\", \"className\", \"truncateText\", \"showOnHover\", \"textOnly\", \"hasActions\", \"isExpander\", \"mobileOptions\", \"header\", \"hideForMobile\", \"isMobileHeader\", \"isMobileFullWidth\", \"style\", \"width\"]);\n\n  var cellClasses = classNames('euiTableRowCell', {\n    'euiTableRowCell--hasActions': hasActions,\n    'euiTableRowCell--isExpander': isExpander,\n    'euiTableRowCell--hideForDesktop': mobileOptions.only || isMobileHeader,\n    'euiTableRowCell--enlargeForMobile': mobileOptions.enlarge || isMobileHeader,\n    'euiTableRowCell--isMobileFullWidth': mobileOptions.fullWidth || isMobileFullWidth || isMobileHeader\n  });\n  var contentClasses = classNames('euiTableCellContent', className, {\n    'euiTableCellContent--alignRight': align === RIGHT_ALIGNMENT,\n    'euiTableCellContent--alignCenter': align === CENTER_ALIGNMENT,\n    'euiTableCellContent--showOnHover': showOnHover,\n    'euiTableCellContent--truncateText': truncateText,\n    // We're doing this rigamarole instead of creating `euiTableCellContent--textOnly` for BWC\n    // purposes for the time-being.\n    'euiTableCellContent--overflowingContent': textOnly !== true\n  });\n  var mobileContentClasses = classNames('euiTableCellContent', className, {\n    'euiTableCellContent--alignRight': mobileOptions.align === RIGHT_ALIGNMENT || align === RIGHT_ALIGNMENT,\n    'euiTableCellContent--alignCenter': mobileOptions.align === CENTER_ALIGNMENT || align === RIGHT_ALIGNMENT,\n    'euiTableCellContent--showOnHover': mobileOptions.showOnHover || showOnHover,\n    'euiTableCellContent--truncateText': mobileOptions.truncateText || truncateText,\n    // We're doing this rigamarole instead of creating `euiTableCellContent--textOnly` for BWC\n    // purposes for the time-being.\n    'euiTableCellContent--overflowingContent': mobileOptions.textOnly !== true || textOnly !== true\n  });\n  var childClasses = classNames({\n    euiTableCellContent__text: textOnly === true,\n    euiTableCellContent__hoverItem: showOnHover\n  });\n  var styleObj = resolveWidthAsStyle(style, width);\n\n  function modifyChildren(children) {\n    var modifiedChildren = children;\n\n    if (textOnly === true) {\n      modifiedChildren = React.createElement(\"span\", {\n        className: childClasses\n      }, children);\n    } else if (React.isValidElement(children)) {\n      modifiedChildren = React.Children.map(children, function (child) {\n        return React.cloneElement(child, {\n          className: classNames(child.props.className, childClasses)\n        });\n      });\n    }\n\n    return modifiedChildren;\n  }\n\n  var childrenNode = modifyChildren(children);\n  var hideForMobileClasses = 'euiTableRowCell--hideForMobile';\n  var showForMobileClasses = 'euiTableRowCell--hideForDesktop';\n  var cellRender;\n\n  if (mobileOptions.show === false || hideForMobile) {\n    cellRender = React.createElement(\"td\", _extends({\n      className: \"\".concat(cellClasses, \" \").concat(hideForMobileClasses),\n      style: styleObj\n    }, rest), React.createElement(\"div\", {\n      className: contentClasses\n    }, childrenNode));\n  } else {\n    cellRender = React.createElement(\"td\", _extends({\n      className: cellClasses,\n      style: styleObj\n    }, rest), (mobileOptions.header || header) && !isMobileHeader && React.createElement(\"div\", {\n      className: \"euiTableRowCell__mobileHeader \".concat(showForMobileClasses)\n    }, mobileOptions.header || header), mobileOptions.render ? React.createElement(Fragment, null, React.createElement(\"div\", {\n      className: \"\".concat(mobileContentClasses, \" \").concat(showForMobileClasses)\n    }, modifyChildren(mobileOptions.render)), React.createElement(\"div\", {\n      className: \"\".concat(contentClasses, \" \").concat(hideForMobileClasses)\n    }, childrenNode)) : React.createElement(\"div\", {\n      className: contentClasses\n    }, childrenNode));\n  }\n\n  return cellRender;\n};\nEuiTableRowCell.propTypes = {\n  className: PropTypes.string,\n  \"aria-label\": PropTypes.string,\n  \"data-test-subj\": PropTypes.string,\n  align: PropTypes.oneOf([\"left\", \"right\", \"center\"]),\n\n  /**\n     * Don't allow line breaks within cells\n     */\n  showOnHover: PropTypes.bool,\n\n  /**\n     * Setting `textOnly` to `false` will break words unnecessarily on FF and\n     * IE.  To combat this problem on FF, wrap contents with the css utility\n     * `.eui-textBreakWord`.\n     */\n  textOnly: PropTypes.bool,\n\n  /**\n     * _Should only be used for action cells_\n     */\n  truncateText: PropTypes.bool,\n  width: PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.number.isRequired]),\n\n  /**\n     * Indicates if the column is dedicated to icon-only actions (currently\n     * affects mobile only)\n     */\n  hasActions: PropTypes.bool,\n\n  /**\n     * _DEPRECATED: use `mobileOptions.header`_\n     * The column's header title for use in mobile view (will be added as a\n     * data-attr)\n     */\n  header: PropTypes.string,\n\n  /**\n     * _DEPRECATED: use `mobileOptions.show = false`_\n     * Indicates if the column should not show for mobile users (typically\n     * hidden because a custom mobile header utilizes the column's contents)\n     */\n  hideForMobile: PropTypes.bool,\n\n  /**\n     * Indicates if the column is dedicated as the expandable row toggle\n     */\n  isExpander: PropTypes.bool,\n\n  /**\n     * _DEPRECATED: use `mobileOptions.fullWidth`_\n     * Allocates 100% of the width of the container in mobile view\n     * (typically cells are contained to 50%)\n     */\n  isMobileFullWidth: PropTypes.bool,\n\n  /**\n     * _DEPRECATED: use `mobileOptions.only = true & mobileOptions.header = * false`_\n     * Indicates if the column was created to be the row's heading in mobile\n     * view.  It won't display column's header inline and it the column will\n     * be hidden at larger screens)\n     */\n  isMobileHeader: PropTypes.bool,\n\n  /**\n     * Mobile options for displaying differently at small screens\n     */\n  mobileOptions: PropTypes.shape({\n    /**\n       * If false, will not render the cell at all for mobile\n       */\n    show: PropTypes.bool,\n\n    /**\n       * Only show for mobile? If true, will not render the column at all for desktop\n       */\n    only: PropTypes.bool,\n\n    /**\n       * Custom render/children if different from desktop\n       */\n    render: PropTypes.node,\n\n    /**\n       * The column's header for use in mobile view (automatically passed down\n       * when using `EuiBasicTable`).\n       * Or pass `false` to not show a header at all.\n       */\n    header: PropTypes.oneOfType([PropTypes.node.isRequired, PropTypes.bool.isRequired]),\n\n    /**\n       * Increase text size compared to rest of cells\n       */\n    enlarge: PropTypes.bool,\n\n    /**\n       * Allocates 100% of the width of the container in mobile view\n       * (typically cells are contained to 50%)\n       */\n    fullWidth: PropTypes.bool,\n\n    /**\n       * Horizontal alignment of the text in the cell\n       */\n    align: PropTypes.oneOf([\"left\", \"right\", \"center\"]),\n\n    /**\n       * Don't allow line breaks within cells\n       */\n    showOnHover: PropTypes.bool,\n\n    /**\n       * Setting `textOnly` to `false` will break words unnecessarily on FF and\n       * IE.  To combat this problem on FF, wrap contents with the css utility\n       * `.eui-textBreakWord`.\n       */\n    textOnly: PropTypes.bool,\n\n    /**\n       * _Should only be used for action cells_\n       */\n    truncateText: PropTypes.bool,\n    width: PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.number.isRequired])\n  })\n};"]},"metadata":{},"sourceType":"module"}
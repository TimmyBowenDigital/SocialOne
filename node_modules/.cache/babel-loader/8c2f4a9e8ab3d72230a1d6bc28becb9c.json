{"ast":null,"code":"function _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nimport React, { useEffect } from 'react';\nimport { render, unmountComponentAtNode } from 'react-dom';\nimport { useInnerText } from './inner_text';\nexport function useRenderToText(node) {\n  var placeholder = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n  var _useInnerText = useInnerText(placeholder),\n      _useInnerText2 = _slicedToArray(_useInnerText, 2),\n      ref = _useInnerText2[0],\n      text = _useInnerText2[1];\n\n  useEffect(function () {\n    var hostNode = document.createDocumentFragment();\n    render(React.createElement(\"div\", {\n      ref: ref\n    }, node), hostNode);\n    return function () {\n      // since we're in React's lifecycle via `useEffect`, wait a\n      // tick to escape otherwise React performs multiple unmounts ðŸ¤·\n      requestAnimationFrame(function () {\n        unmountComponentAtNode(hostNode);\n      });\n    };\n  }, [node, ref]);\n  return text || placeholder;\n}","map":{"version":3,"sources":["/Users/timothybowen/Documents/Development/social-one/node_modules/@elastic/eui/es/components/inner_text/render_to_text.js"],"names":["_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","TypeError","_arr","_n","_d","_e","undefined","_i","Symbol","iterator","_s","next","done","push","value","length","err","Array","isArray","React","useEffect","render","unmountComponentAtNode","useInnerText","useRenderToText","node","placeholder","arguments","_useInnerText","_useInnerText2","ref","text","hostNode","document","createDocumentFragment","createElement","requestAnimationFrame"],"mappings":"AAAA,SAASA,cAAT,CAAwBC,GAAxB,EAA6BC,CAA7B,EAAgC;AAAE,SAAOC,eAAe,CAACF,GAAD,CAAf,IAAwBG,qBAAqB,CAACH,GAAD,EAAMC,CAAN,CAA7C,IAAyDG,gBAAgB,EAAhF;AAAqF;;AAEvH,SAASA,gBAAT,GAA4B;AAAE,QAAM,IAAIC,SAAJ,CAAc,sDAAd,CAAN;AAA8E;;AAE5G,SAASF,qBAAT,CAA+BH,GAA/B,EAAoCC,CAApC,EAAuC;AAAE,MAAIK,IAAI,GAAG,EAAX;AAAe,MAAIC,EAAE,GAAG,IAAT;AAAe,MAAIC,EAAE,GAAG,KAAT;AAAgB,MAAIC,EAAE,GAAGC,SAAT;;AAAoB,MAAI;AAAE,SAAK,IAAIC,EAAE,GAAGX,GAAG,CAACY,MAAM,CAACC,QAAR,CAAH,EAAT,EAAiCC,EAAtC,EAA0C,EAAEP,EAAE,GAAG,CAACO,EAAE,GAAGH,EAAE,CAACI,IAAH,EAAN,EAAiBC,IAAxB,CAA1C,EAAyET,EAAE,GAAG,IAA9E,EAAoF;AAAED,MAAAA,IAAI,CAACW,IAAL,CAAUH,EAAE,CAACI,KAAb;;AAAqB,UAAIjB,CAAC,IAAIK,IAAI,CAACa,MAAL,KAAgBlB,CAAzB,EAA4B;AAAQ;AAAE,GAAvJ,CAAwJ,OAAOmB,GAAP,EAAY;AAAEZ,IAAAA,EAAE,GAAG,IAAL;AAAWC,IAAAA,EAAE,GAAGW,GAAL;AAAW,GAA5L,SAAqM;AAAE,QAAI;AAAE,UAAI,CAACb,EAAD,IAAOI,EAAE,CAAC,QAAD,CAAF,IAAgB,IAA3B,EAAiCA,EAAE,CAAC,QAAD,CAAF;AAAiB,KAAxD,SAAiE;AAAE,UAAIH,EAAJ,EAAQ,MAAMC,EAAN;AAAW;AAAE;;AAAC,SAAOH,IAAP;AAAc;;AAEzZ,SAASJ,eAAT,CAAyBF,GAAzB,EAA8B;AAAE,MAAIqB,KAAK,CAACC,OAAN,CAActB,GAAd,CAAJ,EAAwB,OAAOA,GAAP;AAAa;;AAErE,OAAOuB,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,sBAAjB,QAA+C,WAA/C;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,OAAO,SAASC,eAAT,CAAyBC,IAAzB,EAA+B;AACpC,MAAIC,WAAW,GAAGC,SAAS,CAACZ,MAAV,GAAmB,CAAnB,IAAwBY,SAAS,CAAC,CAAD,CAAT,KAAiBrB,SAAzC,GAAqDqB,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAtF;;AAEA,MAAIC,aAAa,GAAGL,YAAY,CAACG,WAAD,CAAhC;AAAA,MACIG,cAAc,GAAGlC,cAAc,CAACiC,aAAD,EAAgB,CAAhB,CADnC;AAAA,MAEIE,GAAG,GAAGD,cAAc,CAAC,CAAD,CAFxB;AAAA,MAGIE,IAAI,GAAGF,cAAc,CAAC,CAAD,CAHzB;;AAKAT,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAIY,QAAQ,GAAGC,QAAQ,CAACC,sBAAT,EAAf;AACAb,IAAAA,MAAM,CAACF,KAAK,CAACgB,aAAN,CAAoB,KAApB,EAA2B;AAChCL,MAAAA,GAAG,EAAEA;AAD2B,KAA3B,EAEJL,IAFI,CAAD,EAEIO,QAFJ,CAAN;AAGA,WAAO,YAAY;AACjB;AACA;AACAI,MAAAA,qBAAqB,CAAC,YAAY;AAChCd,QAAAA,sBAAsB,CAACU,QAAD,CAAtB;AACD,OAFoB,CAArB;AAGD,KAND;AAOD,GAZQ,EAYN,CAACP,IAAD,EAAOK,GAAP,CAZM,CAAT;AAaA,SAAOC,IAAI,IAAIL,WAAf;AACD","sourcesContent":["function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useEffect } from 'react';\nimport { render, unmountComponentAtNode } from 'react-dom';\nimport { useInnerText } from './inner_text';\nexport function useRenderToText(node) {\n  var placeholder = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n  var _useInnerText = useInnerText(placeholder),\n      _useInnerText2 = _slicedToArray(_useInnerText, 2),\n      ref = _useInnerText2[0],\n      text = _useInnerText2[1];\n\n  useEffect(function () {\n    var hostNode = document.createDocumentFragment();\n    render(React.createElement(\"div\", {\n      ref: ref\n    }, node), hostNode);\n    return function () {\n      // since we're in React's lifecycle via `useEffect`, wait a\n      // tick to escape otherwise React performs multiple unmounts ðŸ¤·\n      requestAnimationFrame(function () {\n        unmountComponentAtNode(hostNode);\n      });\n    };\n  }, [node, ref]);\n  return text || placeholder;\n}"]},"metadata":{},"sourceType":"module"}
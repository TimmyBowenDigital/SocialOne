{"ast":null,"code":"function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { cloneElement } from 'react';\nimport PropTypes from \"prop-types\";\nimport classNames from 'classnames';\nexport var EuiGlobalToastListItem = function EuiGlobalToastListItem(_ref) {\n  var children = _ref.children,\n      isDismissed = _ref.isDismissed;\n\n  if (!children) {\n    return null;\n  }\n\n  var classes = classNames('euiGlobalToastListItem', children.props.className, {\n    'euiGlobalToastListItem-isDismissed': isDismissed\n  });\n  return cloneElement(children, _objectSpread({}, children.props, {\n    className: classes\n  }));\n};\nEuiGlobalToastListItem.propTypes = {\n  className: PropTypes.string,\n  \"aria-label\": PropTypes.string,\n  \"data-test-subj\": PropTypes.string,\n  isDismissed: PropTypes.bool,\n  children: PropTypes.element\n};","map":{"version":3,"sources":["/Users/timothybowen/Documents/Development/social-one/node_modules/@elastic/eui/es/components/toast/global_toast_list_item.js"],"names":["_objectSpread","target","i","arguments","length","source","ownKeys","Object","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","obj","value","defineProperty","configurable","writable","cloneElement","PropTypes","classNames","EuiGlobalToastListItem","_ref","children","isDismissed","classes","props","className","propTypes","string","bool","element"],"mappings":"AAAA,SAASA,aAAT,CAAuBC,MAAvB,EAA+B;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,QAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAT,IAAgB,IAAhB,GAAuBC,SAAS,CAACD,CAAD,CAAhC,GAAsC,EAAnD;AAAuD,QAAII,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAYH,MAAZ,CAAd;;AAAmC,QAAI,OAAOE,MAAM,CAACE,qBAAd,KAAwC,UAA5C,EAAwD;AAAEH,MAAAA,OAAO,GAAGA,OAAO,CAACI,MAAR,CAAeH,MAAM,CAACE,qBAAP,CAA6BJ,MAA7B,EAAqCM,MAArC,CAA4C,UAAUC,GAAV,EAAe;AAAE,eAAOL,MAAM,CAACM,wBAAP,CAAgCR,MAAhC,EAAwCO,GAAxC,EAA6CE,UAApD;AAAiE,OAA9H,CAAf,CAAV;AAA4J;;AAACR,IAAAA,OAAO,CAACS,OAAR,CAAgB,UAAUC,GAAV,EAAe;AAAEC,MAAAA,eAAe,CAAChB,MAAD,EAASe,GAAT,EAAcX,MAAM,CAACW,GAAD,CAApB,CAAf;AAA4C,KAA7E;AAAiF;;AAAC,SAAOf,MAAP;AAAgB;;AAEje,SAASgB,eAAT,CAAyBC,GAAzB,EAA8BF,GAA9B,EAAmCG,KAAnC,EAA0C;AAAE,MAAIH,GAAG,IAAIE,GAAX,EAAgB;AAAEX,IAAAA,MAAM,CAACa,cAAP,CAAsBF,GAAtB,EAA2BF,GAA3B,EAAgC;AAAEG,MAAAA,KAAK,EAAEA,KAAT;AAAgBL,MAAAA,UAAU,EAAE,IAA5B;AAAkCO,MAAAA,YAAY,EAAE,IAAhD;AAAsDC,MAAAA,QAAQ,EAAE;AAAhE,KAAhC;AAA0G,GAA5H,MAAkI;AAAEJ,IAAAA,GAAG,CAACF,GAAD,CAAH,GAAWG,KAAX;AAAmB;;AAAC,SAAOD,GAAP;AAAa;;AAEjN,SAASK,YAAT,QAA6B,OAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAO,IAAIC,sBAAsB,GAAG,SAASA,sBAAT,CAAgCC,IAAhC,EAAsC;AACxE,MAAIC,QAAQ,GAAGD,IAAI,CAACC,QAApB;AAAA,MACIC,WAAW,GAAGF,IAAI,CAACE,WADvB;;AAGA,MAAI,CAACD,QAAL,EAAe;AACb,WAAO,IAAP;AACD;;AAED,MAAIE,OAAO,GAAGL,UAAU,CAAC,wBAAD,EAA2BG,QAAQ,CAACG,KAAT,CAAeC,SAA1C,EAAqD;AAC3E,0CAAsCH;AADqC,GAArD,CAAxB;AAGA,SAAON,YAAY,CAACK,QAAD,EAAW5B,aAAa,CAAC,EAAD,EAAK4B,QAAQ,CAACG,KAAd,EAAqB;AAC9DC,IAAAA,SAAS,EAAEF;AADmD,GAArB,CAAxB,CAAnB;AAGD,CAdM;AAePJ,sBAAsB,CAACO,SAAvB,GAAmC;AACjCD,EAAAA,SAAS,EAAER,SAAS,CAACU,MADY;AAEjC,gBAAcV,SAAS,CAACU,MAFS;AAGjC,oBAAkBV,SAAS,CAACU,MAHK;AAIjCL,EAAAA,WAAW,EAAEL,SAAS,CAACW,IAJU;AAKjCP,EAAAA,QAAQ,EAAEJ,SAAS,CAACY;AALa,CAAnC","sourcesContent":["function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { cloneElement } from 'react';\nimport PropTypes from \"prop-types\";\nimport classNames from 'classnames';\nexport var EuiGlobalToastListItem = function EuiGlobalToastListItem(_ref) {\n  var children = _ref.children,\n      isDismissed = _ref.isDismissed;\n\n  if (!children) {\n    return null;\n  }\n\n  var classes = classNames('euiGlobalToastListItem', children.props.className, {\n    'euiGlobalToastListItem-isDismissed': isDismissed\n  });\n  return cloneElement(children, _objectSpread({}, children.props, {\n    className: classes\n  }));\n};\nEuiGlobalToastListItem.propTypes = {\n  className: PropTypes.string,\n  \"aria-label\": PropTypes.string,\n  \"data-test-subj\": PropTypes.string,\n  isDismissed: PropTypes.bool,\n  children: PropTypes.element\n};"]},"metadata":{},"sourceType":"module"}
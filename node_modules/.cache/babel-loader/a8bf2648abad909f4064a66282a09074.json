{"ast":null,"code":"var _jsxFileName = \"/Users/timothybowen/Documents/Development/social-one/src/components/ui-elements/post-form.tsx\";\nimport * as React from \"react\";\nexport class PostForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n\n      if (this.validateForm()) {\n        const submitSuccess = await this.submitForm();\n        this.setState({\n          submitSuccess\n        });\n      }\n    };\n\n    const errors = {};\n    const values = {};\n    this.state = {\n      errors,\n      values\n    };\n  }\n\n  haveErrors(errors) {\n    let haveError = false;\n    Object.keys(errors).map(key => {\n      if (errors[key].length > 0) {\n        haveError = true;\n      }\n    });\n    return haveError;\n  }\n\n  validateForm() {\n    return true;\n  }\n\n  async submitForm() {\n    return true;\n  }\n\n  render() {\n    const _this$state = this.state,\n          submitSuccess = _this$state.submitSuccess,\n          errors = _this$state.errors;\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      disabled: this.haveErrors(errors),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Submit\")), submitSuccess && React.createElement(\"div\", {\n      className: \"alert alert-info\",\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"The form was successfully submitted!! \"), submitSuccess === false && this.haveErrors(errors) && React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Sorry, the form is invalid, Please review, adjust and try again\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/timothybowen/Documents/Development/social-one/src/components/ui-elements/post-form.tsx"],"names":["React","PostForm","Component","constructor","props","handleSubmit","e","preventDefault","validateForm","submitSuccess","submitForm","setState","errors","values","state","haveErrors","haveError","Object","keys","map","key","length","render"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAsBA,OAAO,MAAMC,QAAN,SAAuBD,KAAK,CAACE,SAA7B,CAA+D;AAClEC,EAAAA,WAAW,CAACC,KAAD,EAAoB;AAC3B,UAAMA,KAAN;;AAD2B,SAqBvBC,YArBuB,GAqBR,MACnBC,CADmB,IAEH;AAChBA,MAAAA,CAAC,CAACC,cAAF;;AAEA,UAAI,KAAKC,YAAL,EAAJ,EAAyB;AACrB,cAAMC,aAAsB,GAAG,MAAM,KAAKC,UAAL,EAArC;AACA,aAAKC,QAAL,CAAc;AAAEF,UAAAA;AAAF,SAAd;AACH;AACJ,KA9B8B;;AAG3B,UAAMG,MAAe,GAAG,EAAxB;AACA,UAAMC,MAAe,GAAG,EAAxB;AACA,SAAKC,KAAL,GAAa;AACTF,MAAAA,MADS;AAETC,MAAAA;AAFS,KAAb;AAIH;;AAEOE,EAAAA,UAAR,CAAmBH,MAAnB,EAAoC;AAChC,QAAII,SAAkB,GAAG,KAAzB;AACAC,IAAAA,MAAM,CAACC,IAAP,CAAYN,MAAZ,EAAoBO,GAApB,CAAyBC,GAAD,IAAiB;AACrC,UAAIR,MAAM,CAACQ,GAAD,CAAN,CAAYC,MAAZ,GAAqB,CAAzB,EAA4B;AACxBL,QAAAA,SAAS,GAAG,IAAZ;AACH;AACJ,KAJD;AAKA,WAAOA,SAAP;AACH;;AAaOR,EAAAA,YAAR,GAAgC;AAC5B,WAAO,IAAP;AACH;;AAED,QAAcE,UAAd,GAA6C;AACzC,WAAO,IAAP;AACH;;AAEMY,EAAAA,MAAP,GAAgB;AAAA,wBACsB,KAAKR,KAD3B;AAAA,UACJL,aADI,eACJA,aADI;AAAA,UACWG,MADX,eACWA,MADX;AAEZ,WACI;AAAM,MAAA,QAAQ,EAAE,KAAKP,YAArB;AAAmC,MAAA,UAAU,EAAE,IAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,iBAAhC;AAAkD,MAAA,QAAQ,EAAE,KAAKU,UAAL,CAAgBH,MAAhB,CAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CADJ,EAIMH,aAAa,IACX;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAkC,MAAA,IAAI,EAAC,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDALR,EAOKA,aAAa,KAAK,KAAlB,IAA2B,KAAKM,UAAL,CAAgBH,MAAhB,CAA3B,IACG;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAoC,MAAA,IAAI,EAAC,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yEARR,CADJ,CADJ;AAiBH;;AA5DiE","sourcesContent":["import * as React from \"react\";\n\ninterface IFormProps {\n    action: string;\n}\n\nexport interface IValues {\n    [key: string]: any;\n}\n\nexport interface IErrors {\n    [key: string]: string;\n}\n\nexport interface IFormState {\n    values: IValues;\n\n    errors: IErrors;\n\n    submitSuccess?: boolean;\n}\n\nexport class PostForm extends React.Component<IFormProps, IFormState> {\n    constructor(props: IFormProps) {\n        super(props);\n\n        const errors: IErrors = {};\n        const values: IValues = {};\n        this.state = {\n            errors,\n            values\n        };\n    }\n\n    private haveErrors(errors: IErrors) {\n        let haveError: boolean = false;\n        Object.keys(errors).map((key: string) => {\n            if (errors[key].length > 0) {\n                haveError = true;\n            }\n        });\n        return haveError;\n    }\n\n    private handleSubmit = async (\n        e: React.FormEvent<HTMLFormElement>\n    ): Promise<void> => {\n        e.preventDefault();\n\n        if (this.validateForm()) {\n            const submitSuccess: boolean = await this.submitForm();\n            this.setState({ submitSuccess });\n        }\n    };\n\n    private validateForm(): boolean {\n        return true;\n    }\n\n    private async submitForm(): Promise<boolean> {\n        return true;\n    }\n\n    public render() {\n        const { submitSuccess, errors } = this.state;\n        return (\n            <form onSubmit={this.handleSubmit} noValidate={true}>\n                <div className=\"container\">\n                    <div className=\"form-group\">\n                        <button type=\"submit\" className=\"btn btn-primary\" disabled={this.haveErrors(errors)}>Submit</button>\n                    </div>\n                    { submitSuccess && (\n                        <div className=\"alert alert-info\" role=\"alert\">The form was successfully submitted!! </div>\n                    )}\n                    {submitSuccess === false && this.haveErrors(errors) && (\n                        <div className=\"alert alert-danger\" role=\"alert\">\n                            Sorry, the form is invalid, Please review, adjust and try again\n                        </div>\n                    )}\n                </div>\n            </form>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}
"use strict";

var _react = _interopRequireDefault(require("react"));

var _enzyme = require("enzyme");

var _test = require("../../test");

var _error_boundary = require("./error_boundary");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var GoodComponent = function GoodComponent() {
  return _react.default.createElement("div", null, "No error");
};

var errorMessage = "I'm here to kick butt and chew bubblegum.\n\nAnd I'm all out of gum.";

var BadComponent = function BadComponent() {
  throw new Error(errorMessage);
};

describe('EuiErrorBoundary', function () {
  test('is rendered without an error', function () {
    var component = (0, _test.takeMountedSnapshot)((0, _enzyme.mount)(_react.default.createElement(_error_boundary.EuiErrorBoundary, _test.requiredProps, _react.default.createElement(GoodComponent, null))));
    expect(component).toMatchSnapshot();
  });
  test('is rendered with an error', function () {
    // Prevent the React boundary error from appearing in the terminal.
    spyOn(console, 'error'); // eslint-disable-line no-undef
    // Because the error contains the stack trace, it's non-deterministic. So we'll just check that
    // it contains our error message.

    var errorText = (0, _enzyme.mount)(_react.default.createElement(_error_boundary.EuiErrorBoundary, _test.requiredProps, _react.default.createElement(BadComponent, null))).text();
    expect(errorText).toContain(errorMessage);
  });
});
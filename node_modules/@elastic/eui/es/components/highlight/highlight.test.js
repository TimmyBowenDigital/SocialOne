function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import { render } from 'enzyme';
import { requiredProps } from '../../test';
import { EuiHighlight } from './highlight';
describe('EuiHighlight', function () {
  test('is rendered', function () {
    var component = render(React.createElement(EuiHighlight, _extends({}, requiredProps, {
      search: ""
    }), "value"));
    expect(component).toMatchSnapshot();
  });
  describe('behavior', function () {
    describe('matching', function () {
      test('only applies to first match', function () {
        var component = render(React.createElement(EuiHighlight, {
          search: "match"
        }, "match match match"));
        expect(component).toMatchSnapshot();
      });
    });
    describe('loose matching', function () {
      test('matches strings with different casing', function () {
        var component = render(React.createElement(EuiHighlight, {
          search: "CASE"
        }, "different case match"));
        expect(component).toMatchSnapshot();
      });
    });
    describe('strict matching', function () {
      test("doesn't match strings with different casing", function () {
        var component = render(React.createElement(EuiHighlight, {
          search: "CASE",
          strict: true
        }, "different case match"));
        expect(component).toMatchSnapshot();
      });
    });
  });
});
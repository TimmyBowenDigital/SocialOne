function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import { render } from 'enzyme';
import { requiredProps } from '../../../test/required_props';
import { EuiSelect } from './select';
jest.mock('../form_control_layout', function () {
  return {
    EuiFormControlLayout: 'eui-form-control-layout'
  };
});
jest.mock('../validatable_control', function () {
  return {
    EuiValidatableControl: 'eui-validatable-control'
  };
});
describe('EuiSelect', function () {
  test('is rendered', function () {
    var component = render(React.createElement(EuiSelect, _extends({
      id: "id",
      name: "name"
    }, requiredProps)));
    expect(component).toMatchSnapshot();
  });
  describe('props', function () {
    test('options are rendered', function () {
      var component = render(React.createElement(EuiSelect, {
        options: [{
          value: '1',
          text: 'Option #1'
        }, {
          value: '2',
          text: 'Option #2'
        }]
      }));
      expect(component).toMatchSnapshot();
    });
    test('isInvalid is rendered', function () {
      var component = render(React.createElement(EuiSelect, {
        isInvalid: true
      }));
      expect(component).toMatchSnapshot();
    });
    test('fullWidth is rendered', function () {
      var component = render(React.createElement(EuiSelect, {
        fullWidth: true
      }));
      expect(component).toMatchSnapshot();
    });
    test('isLoading is rendered', function () {
      var component = render(React.createElement(EuiSelect, {
        isLoading: true
      }));
      expect(component).toMatchSnapshot();
    });
    test('disabled options are rendered', function () {
      var component = render(React.createElement(EuiSelect, {
        options: [{
          value: '1',
          text: 'Option #1',
          disabled: false
        }, {
          value: '2',
          text: 'Option #2',
          disabled: true
        }]
      }));
      expect(component).toMatchSnapshot();
    });
    test('value option is rendered', function () {
      var component = render(React.createElement(EuiSelect, {
        options: [{
          value: '1',
          text: 'Option #1'
        }, {
          value: '2',
          text: 'Option #2'
        }],
        value: '1',
        onChange: function onChange() {}
      }));
      expect(component).toMatchSnapshot();
    });
  });
});